import Head from 'next/head';
import React, {useState, useEffect} from 'react'
import { PostCard, PostWidget, Categories } from '../components';
import {useFetchForHome} from '../utils' 





export default function Home() {
  //posts are actual pages->array of arrays from paginate
  const{loading, posts} = useFetchForHome()
  console.log(posts.length)
  const[page, setPage] = useState(0)
  
  const[postsPerPage, setPostsPerPage] = useState([])

  useEffect(()=>{
    if(loading) return
  
    setPostsPerPage(posts[page])//from all pages-> that page
    //console.log(postsPerPage)
  },[loading, page])

  const handlePage = (index)=>{
    setPage(index)
  }

  return (
    <div className="container xl:m-0 lg:mx-auto lg:px-14  md:mx-auto sm:mx-auto mb-8">
      <Head>
        <title>De ale batranului...</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="grid grid-cols-1 md:grid-cols-6 lg:grid-cols-12 gap-12 ">
        <div className=" lg:col-span-8 md:col-span-3 col-span-1">
          {postsPerPage.map((post, index)=>{
            return <PostCard key={index} post = {post.node}/>
            })}
        </div> 
        <div className="lg:col-span-4 md:col-span-3 col-span-1">
          <div className="sticky relative top-40">
            <PostWidget/>
            <Categories/>
          </div>
        </div>      
      </div>   
      {!loading  && (
          <div className=" max-w-sm flex justify-center">
            {posts.map((item, index)=>{
              return(
                <button key={index} onClick={()=>handlePage(index)} className='col-span-1 bg-amber-700 p-1 m-1 rounded cursor-pointer text-md text-white font-bold transition duration-700 transform hover:-translate-y-1  '>
                  {index+1}
                </button>
              )
            })}
          </div>
        )}   
    </div>

  )
}

// export async function getStaticProps(){
//   const results = (await getPosts()) || [];
//   return {
//     props:{posts:results.edges, pageInfo:results.pageInfo, count:results.aggregate.count}
//   }
// }